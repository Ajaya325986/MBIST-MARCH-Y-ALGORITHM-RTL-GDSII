/*
###############################################################
#  Generated by:      Cadence Innovus 21.15-s110_1
#  OS:                Linux x86_64(Host ID cad12)
#  Generated on:      Tue Nov 26 12:01:53 2024
#  Design:            controller1
#  Command:           saveNetlist /home/student/Downloads/HOPE_finalMBIST/PVS/LVS/controller1.v -phys -includePowerGround -excludeLeafCell
###############################################################
*/
module memory (
	clk, 
	rst, 
	CA, 
	we, 
	datain, 
	re, 
	dataout);
   input clk;
   input rst;
   input [3:0] CA;
   input we;
   input [7:0] datain;
   input re;
   output [7:0] dataout;
endmodule

// Generated by Cadence Genus(TM) Synthesis Solution 21.14-s082_1
// Generated on: Nov 26 2024 11:40:31 IST (Nov 26 2024 06:10:31 UTC)
// Verification Directory fv/controller1 
module controller1 (
	clk, 
	rst, 
	status, 
	dataout);
   input clk;
   input rst;
   output status;
   output [7:0] dataout;

   // Internal wires
   wire VSS;
   wire VDD;
   wire [3:0] CA;
   wire [7:0] datain;
   wire [3:0] nextstate;
   wire [3:0] state;
   wire [7:0] orig;
   wire [1:0] element_operation;
   wire [4:0] count;
   wire Test;
   wire UNCONNECTED0;
   wire element_done;
   wire n_0;
   wire n_1;
   wire n_2;
   wire n_3;
   wire n_4;
   wire n_5;
   wire n_6;
   wire n_7;
   wire n_8;
   wire n_9;
   wire n_10;
   wire n_11;
   wire n_12;
   wire n_13;
   wire n_14;
   wire n_15;
   wire n_16;
   wire n_17;
   wire n_18;
   wire n_19;
   wire n_20;
   wire n_21;
   wire n_22;
   wire n_23;
   wire n_24;
   wire n_25;
   wire n_26;
   wire n_27;
   wire n_28;
   wire n_29;
   wire n_30;
   wire n_31;
   wire n_32;
   wire n_33;
   wire n_34;
   wire n_35;
   wire n_36;
   wire n_38;
   wire n_39;
   wire n_40;
   wire n_41;
   wire n_42;
   wire n_43;
   wire n_44;
   wire n_45;
   wire n_46;
   wire n_47;
   wire n_48;
   wire n_49;
   wire n_50;
   wire n_51;
   wire n_52;
   wire n_53;
   wire n_54;
   wire n_55;
   wire n_56;
   wire n_57;
   wire n_58;
   wire n_59;
   wire n_60;
   wire n_61;
   wire n_62;
   wire n_63;
   wire n_64;
   wire n_65;
   wire n_66;
   wire n_67;
   wire n_68;
   wire n_69;
   wire n_71;
   wire n_72;
   wire n_74;
   wire n_75;
   wire n_76;
   wire n_77;
   wire n_78;
   wire n_79;
   wire n_80;
   wire n_81;
   wire n_82;
   wire n_83;
   wire n_84;
   wire n_85;
   wire n_86;
   wire n_88;
   wire n_89;
   wire n_91;
   wire n_92;
   wire n_93;
   wire n_95;
   wire n_96;
   wire n_108;
   wire n_109;
   wire n_110;
   wire n_111;
   wire n_112;
   wire n_113;
   wire n_114;
   wire n_127;
   wire \orig[0]_579 ;
   wire \orig[0]_587 ;
   wire re;
   wire we;

   assign orig[1] = 1'b0 ;
   assign orig[6] = 1'b0 ;
   assign orig[2] = 1'b0 ;
   assign orig[5] = 1'b0 ;
   assign status = 1'b0 ;

   // Module instantiations
   NAND3BX1 FE_RC_3_0 (
	.AN(n_85),
	.B(n_68),
	.C(n_88),
	.Y(n_89));
   CLKINVX1 FE_RC_0_0 (
	.A(n_110),
	.Y(n_36));
   memory u (
	.clk(clk),
	.rst(rst),
	.CA(CA),
	.we(we),
	.datain({ datain[0],
		datain[0],
		datain[0],
		datain[0],
		datain[0],
		datain[0],
		datain[0],
		datain[0] }),
	.re(re),
	.dataout(dataout));
   OAI211XL g3692__6260 (
	.A0(1'b1),
	.A1(dataout[4]),
	.B0(n_95),
	.C0(n_79),
	.Y(n_96));
   AOI211XL g3693__4319 (
	.A0(1'b1),
	.A1(dataout[4]),
	.B0(n_81),
	.C0(n_93),
	.Y(n_95));
   OAI21XL g3695__5526 (
	.A0(1'b1),
	.A1(dataout[7]),
	.B0(n_92),
	.Y(n_93));
   AOI211XL g3696__6783 (
	.A0(1'b1),
	.A1(dataout[7]),
	.B0(1'b0),
	.C0(n_89),
	.Y(n_92));
   AOI221XL g3700__1705 (
	.A0(dataout[0]),
	.A1(n_79),
	.B0(dataout[3]),
	.B1(1'b1),
	.C0(n_82),
	.Y(n_88));
   OAI222XL g3703__8246 (
	.A0(n_67),
	.A1(orig[5]),
	.B0(dataout[3]),
	.B1(1'b1),
	.C0(n_79),
	.C1(dataout[0]),
	.Y(n_85));
   MXI2XL g3706__1881 (
	.A(1'b1),
	.B(orig[1]),
	.S0(dataout[1]),
	.Y(n_82));
   CLKXOR2X1 g3707__5115 (
	.A(dataout[6]),
	.B(orig[6]),
	.Y(n_81));
   CLKINVX1 g3708 (
	.A(n_80),
	.Y(n_79));
   TBUFX1 g158__7482 (
	.A(\orig[0]_579 ),
	.OE(\orig[0]_587 ),
	.Y(n_80));
   TBUFX1 g156__4733 (
	.A(\orig[0]_579 ),
	.OE(\orig[0]_587 ),
	.Y(orig[2]));
   TBUFX1 g157__6161 (
	.A(\orig[0]_579 ),
	.OE(\orig[0]_587 ),
	.Y(orig[1]));
   TBUFX1 g152__9945 (
	.A(\orig[0]_579 ),
	.OE(\orig[0]_587 ),
	.Y(orig[6]));
   TBUFX1 g153__2346 (
	.A(\orig[0]_579 ),
	.OE(\orig[0]_587 ),
	.Y(orig[5]));
   DFFTRXL \orig_reg[0]226  (
	.CK(clk),
	.D(n_36),
	.Q(UNCONNECTED0),
	.QN(\orig[0]_587 ),
	.RN(1'b1));
   NAND2BX1 g3726__8428 (
	.AN(rst),
	.B(Test),
	.Y(n_110));
   CLKINVX1 g3728 (
	.A(dataout[2]),
	.Y(n_68));
   CLKINVX1 g3729 (
	.A(dataout[5]),
	.Y(n_67));
   DFFSHQX1 Test_reg (
	.CK(clk),
	.D(n_58),
	.Q(Test),
	.SN(n_7));
   SDFFQX1 \orig_reg[0]  (
	.CK(clk),
	.D(\orig[0]_579 ),
	.Q(\orig[0]_579 ),
	.SE(n_36),
	.SI(1'b0));
   AOI21XL g3559__6131 (
	.A0(1'b0),
	.A1(1'b0),
	.B0(n_4),
	.Y(n_58));
   INVXL g3617 (
	.A(rst),
	.Y(n_7));
   INVX1 g3623 (
	.A(Test),
	.Y(n_4));

   // Fillers and physical instances.
   FILL1 FILLER_T_1_139 (
 );
   FILL2 FILLER_T_1_138 (
 );
   FILL4 FILLER_T_1_137 (
 );
   FILL8 FILLER_T_1_136 (
 );
   FILL2 FILLER_T_1_135 (
 );
   FILL1 FILLER_T_1_134 (
 );
   FILL1 FILLER_T_1_133 (
 );
   FILL2 FILLER_T_1_132 (
 );
   FILL4 FILLER_T_1_131 (
 );
   FILL8 FILLER_T_1_130 (
 );
   FILL32 FILLER_T_1_129 (
 );
   FILL2 FILLER_T_1_128 (
 );
   FILL4 FILLER_T_1_127 (
 );
   FILL1 FILLER_T_1_126 (
 );
   FILL2 FILLER_T_1_125 (
 );
   FILL4 FILLER_T_1_124 (
 );
   FILL16 FILLER_T_1_123 (
 );
   FILL2 FILLER_T_1_122 (
 );
   FILL4 FILLER_T_1_121 (
 );
   FILL8 FILLER_T_1_120 (
 );
   FILL64 FILLER_T_1_119 (
 );
   FILL1 FILLER_T_1_118 (
 );
   FILL2 FILLER_T_1_117 (
 );
   FILL4 FILLER_T_1_116 (
 );
   FILL8 FILLER_T_1_115 (
 );
   FILL16 FILLER_T_1_114 (
 );
   FILL1 FILLER_T_1_113 (
 );
   FILL32 FILLER_T_1_112 (
 );
   FILL64 FILLER_T_1_111 (
 );
   FILL1 FILLER_T_1_110 (
 );
   FILL2 FILLER_T_1_109 (
 );
   FILL4 FILLER_T_1_108 (
 );
   FILL8 FILLER_T_1_107 (
 );
   FILL16 FILLER_T_1_106 (
 );
   FILL1 FILLER_T_1_105 (
 );
   FILL32 FILLER_T_1_104 (
 );
   FILL64 FILLER_T_1_103 (
 );
   FILL1 FILLER_T_1_102 (
 );
   FILL2 FILLER_T_1_101 (
 );
   FILL4 FILLER_T_1_100 (
 );
   FILL8 FILLER_T_1_99 (
 );
   FILL16 FILLER_T_1_98 (
 );
   FILL1 FILLER_T_1_97 (
 );
   FILL32 FILLER_T_1_96 (
 );
   FILL64 FILLER_T_1_95 (
 );
   FILL1 FILLER_T_1_94 (
 );
   FILL2 FILLER_T_1_93 (
 );
   FILL4 FILLER_T_1_92 (
 );
   FILL8 FILLER_T_1_91 (
 );
   FILL16 FILLER_T_1_90 (
 );
   FILL1 FILLER_T_1_89 (
 );
   FILL32 FILLER_T_1_88 (
 );
   FILL64 FILLER_T_1_87 (
 );
   FILL1 FILLER_T_1_86 (
 );
   FILL2 FILLER_T_1_85 (
 );
   FILL4 FILLER_T_1_84 (
 );
   FILL8 FILLER_T_1_83 (
 );
   FILL16 FILLER_T_1_82 (
 );
   FILL1 FILLER_T_1_81 (
 );
   FILL32 FILLER_T_1_80 (
 );
   FILL64 FILLER_T_1_79 (
 );
   FILL1 FILLER_T_1_78 (
 );
   FILL2 FILLER_T_1_77 (
 );
   FILL4 FILLER_T_1_76 (
 );
   FILL8 FILLER_T_1_75 (
 );
   FILL16 FILLER_T_1_74 (
 );
   FILL1 FILLER_T_1_73 (
 );
   FILL32 FILLER_T_1_72 (
 );
   FILL64 FILLER_T_1_71 (
 );
   FILL1 FILLER_T_1_70 (
 );
   FILL2 FILLER_T_1_69 (
 );
   FILL4 FILLER_T_1_68 (
 );
   FILL8 FILLER_T_1_67 (
 );
   FILL16 FILLER_T_1_66 (
 );
   FILL1 FILLER_T_1_65 (
 );
   FILL32 FILLER_T_1_64 (
 );
   FILL64 FILLER_T_1_63 (
 );
   FILL1 FILLER_T_1_62 (
 );
   FILL2 FILLER_T_1_61 (
 );
   FILL4 FILLER_T_1_60 (
 );
   FILL8 FILLER_T_1_59 (
 );
   FILL16 FILLER_T_1_58 (
 );
   FILL16 FILLER_T_1_57 (
 );
   FILL1 FILLER_T_1_56 (
 );
   FILL4 FILLER_T_1_55 (
 );
   FILL4 FILLER_T_1_54 (
 );
   FILL16 FILLER_T_1_53 (
 );
   FILL32 FILLER_T_1_52 (
 );
   FILL1 FILLER_T_1_51 (
 );
   FILL2 FILLER_T_1_50 (
 );
   FILL4 FILLER_T_1_49 (
 );
   FILL8 FILLER_T_1_48 (
 );
   FILL16 FILLER_T_1_47 (
 );
   FILL16 FILLER_T_1_46 (
 );
   FILL1 FILLER_T_1_45 (
 );
   FILL4 FILLER_T_1_44 (
 );
   FILL1 FILLER_T_1_43 (
 );
   FILL2 FILLER_T_1_42 (
 );
   FILL4 FILLER_T_1_41 (
 );
   FILL1 FILLER_T_1_40 (
 );
   FILL8 FILLER_T_1_39 (
 );
   FILL8 FILLER_T_1_38 (
 );
   FILL16 FILLER_T_1_37 (
 );
   FILL1 FILLER_T_1_36 (
 );
   FILL2 FILLER_T_1_35 (
 );
   FILL4 FILLER_T_1_34 (
 );
   FILL8 FILLER_T_1_33 (
 );
   FILL16 FILLER_T_1_32 (
 );
   FILL2 FILLER_T_1_31 (
 );
   FILL4 FILLER_T_1_30 (
 );
   FILL8 FILLER_T_1_29 (
 );
   FILL2 FILLER_T_1_28 (
 );
   FILL1 FILLER_T_1_27 (
 );
   FILL1 FILLER_T_1_26 (
 );
   FILL4 FILLER_T_1_25 (
 );
   FILL8 FILLER_T_1_24 (
 );
   FILL1 FILLER_T_1_23 (
 );
   FILL2 FILLER_T_1_22 (
 );
   FILL4 FILLER_T_1_21 (
 );
   FILL8 FILLER_T_1_20 (
 );
   FILL16 FILLER_T_1_19 (
 );
   FILL1 FILLER_T_1_18 (
 );
   FILL4 FILLER_T_1_17 (
 );
   FILL8 FILLER_T_1_16 (
 );
   FILL16 FILLER_T_1_15 (
 );
   FILL1 FILLER_T_1_14 (
 );
   FILL8 FILLER_T_1_13 (
 );
   FILL1 FILLER_T_1_12 (
 );
   FILL2 FILLER_T_1_11 (
 );
   FILL4 FILLER_T_1_10 (
 );
   FILL16 FILLER_T_1_9 (
 );
   FILL1 FILLER_T_1_8 (
 );
   FILL2 FILLER_T_1_7 (
 );
   FILL4 FILLER_T_1_6 (
 );
   FILL8 FILLER_T_1_5 (
 );
   FILL16 FILLER_T_1_4 (
 );
   FILL1 FILLER_T_1_3 (
 );
   FILL32 FILLER_T_1_2 (
 );
   FILL64 FILLER_T_1_1 (
 );
   FILL2 WELLTAP_28 (
 );
   FILL2 WELLTAP_27 (
 );
   FILL2 WELLTAP_26 (
 );
   FILL2 WELLTAP_25 (
 );
   FILL2 WELLTAP_24 (
 );
   FILL2 WELLTAP_23 (
 );
   FILL2 WELLTAP_22 (
 );
   FILL2 WELLTAP_21 (
 );
   FILL2 WELLTAP_20 (
 );
   FILL2 WELLTAP_19 (
 );
   FILL2 WELLTAP_18 (
 );
   FILL2 WELLTAP_17 (
 );
   FILL2 WELLTAP_16 (
 );
   FILL2 WELLTAP_15 (
 );
   FILL2 WELLTAP_14 (
 );
   FILL2 WELLTAP_13 (
 );
   FILL2 WELLTAP_12 (
 );
   FILL2 WELLTAP_11 (
 );
   FILL2 WELLTAP_10 (
 );
   FILL2 WELLTAP_9 (
 );
   FILL2 WELLTAP_8 (
 );
   FILL2 WELLTAP_7 (
 );
   FILL2 WELLTAP_6 (
 );
   FILL2 WELLTAP_5 (
 );
   FILL2 WELLTAP_4 (
 );
   FILL2 WELLTAP_3 (
 );
   FILL2 WELLTAP_2 (
 );
   FILL2 WELLTAP_1 (
 );
   FILL4 ENDCAP_28 (
 );
   FILL4 ENDCAP_27 (
 );
   FILL4 ENDCAP_26 (
 );
   FILL4 ENDCAP_25 (
 );
   FILL4 ENDCAP_24 (
 );
   FILL4 ENDCAP_23 (
 );
   FILL4 ENDCAP_22 (
 );
   FILL4 ENDCAP_21 (
 );
   FILL4 ENDCAP_20 (
 );
   FILL4 ENDCAP_19 (
 );
   FILL4 ENDCAP_18 (
 );
   FILL4 ENDCAP_17 (
 );
   FILL4 ENDCAP_16 (
 );
   FILL4 ENDCAP_15 (
 );
   FILL4 ENDCAP_14 (
 );
   FILL4 ENDCAP_13 (
 );
   FILL4 ENDCAP_12 (
 );
   FILL4 ENDCAP_11 (
 );
   FILL4 ENDCAP_10 (
 );
   FILL4 ENDCAP_9 (
 );
   FILL4 ENDCAP_8 (
 );
   FILL4 ENDCAP_7 (
 );
   FILL4 ENDCAP_6 (
 );
   FILL4 ENDCAP_5 (
 );
   FILL4 ENDCAP_4 (
 );
   FILL4 ENDCAP_3 (
 );
   FILL4 ENDCAP_2 (
 );
   FILL4 ENDCAP_1 (
 );
endmodule

